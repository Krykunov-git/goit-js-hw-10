{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport iconResolve from '../img/bi_x-octagon.png';\n\nlet userSelectedDate = null;\n\nconst btnStart = document.querySelector('button[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst clockfaceDataDays = document.querySelector('.value[data-days]');\nconst clockfaceDataHours = document.querySelector('.value[data-hours]');\nconst clockfaceDataMinutes = document.querySelector('.value[data-minutes]');\nconst clockfaceDataSeconds = document.querySelector('.value[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  locale: {\n    firstDayOfWeek: 1,\n  },\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= Date.now()) {\n      iziToast.show({\n        theme: 'dark',\n        iconUrl: iconResolve,\n        backgroundColor: '#EF4040',\n        title: 'Error',\n        titleSize: '16px',\n        titleLineHeight: '150%',\n        message: 'Illegal operation',\n        messageSize: '16px',\n        messageLineHeight: '150%',\n        position: 'topRight',\n      });\n      btnStart.disabled = 'disabled';\n    } else {\n      iziToast.destroy();\n      btnStart.disabled = '';\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nclass Timer {\n  constructor({ onTick, btn, input }) {\n    this.onTick = onTick;\n    this.btn = btn;\n    this.input = input;\n    this.init();\n  }\n\n  init() {\n    this.isActive = false;\n    this.intervalId = null;\n    const time = this.convertMs(0);\n    this.onTick(time);\n    this.elementSetDisable(this.btn, true);\n    this.elementSetDisable(this.input, false);\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    this.isActive = true;\n    this.elementSetDisable(this.btn, true);\n    this.elementSetDisable(this.input, true);\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = userSelectedDate - currentTime;\n      const time = this.convertMs(deltaTime);\n      if (deltaTime < 1000) {\n        this.stop();\n        this.init();\n      }\n      this.onTick(time);\n    }, 1000);\n  }\n  stop() {\n    clearInterval(this.intervalId);\n  }\n\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = this.pad(Math.floor(ms / day));\n    // Remaining hours\n    const hours = this.pad(Math.floor((ms % day) / hour));\n    // Remaining minutes\n    const minutes = this.pad(Math.floor(((ms % day) % hour) / minute));\n    // Remaining seconds\n    const seconds = this.pad(\n      Math.floor((((ms % day) % hour) % minute) / second)\n    );\n\n    return { days, hours, minutes, seconds };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  elementSetDisable(element, bool) {\n    element.disabled = bool ? 'disabled' : '';\n  }\n}\n\nconst timer = new Timer({\n  onTick: updateClockfase,\n  btn: btnStart,\n  input: dateTimePicker,\n});\n\nbtnStart.addEventListener('click', timer.start.bind(timer));\n\nfunction updateClockfase({ days, hours, minutes, seconds }) {\n  clockfaceDataDays.textContent = `${days}`;\n  clockfaceDataHours.textContent = `${hours}`;\n  clockfaceDataMinutes.textContent = `${minutes}`;\n  clockfaceDataSeconds.textContent = `${seconds}`;\n}\n"],"names":["userSelectedDate","btnStart","dateTimePicker","clockfaceDataDays","clockfaceDataHours","clockfaceDataMinutes","clockfaceDataSeconds","options","selectedDates","iziToast","iconResolve","flatpickr","Timer","onTick","btn","input","time","currentTime","deltaTime","ms","days","hours","minutes","seconds","value","element","bool","timer","updateClockfase"],"mappings":"iJAMA,IAAIA,EAAmB,KAEvB,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAoB,SAAS,cAAc,mBAAmB,EAC9DC,EAAqB,SAAS,cAAc,oBAAoB,EAChEC,EAAuB,SAAS,cAAc,sBAAsB,EACpEC,EAAuB,SAAS,cAAc,sBAAsB,EAEpEC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,OAAQ,CACN,eAAgB,CACjB,EACD,QAAQC,EAAe,CACrBR,EAAmBQ,EAAc,CAAC,EAC9BR,GAAoB,KAAK,OAC3BS,EAAS,KAAK,CACZ,MAAO,OACP,QAASC,EACT,gBAAiB,UACjB,MAAO,QACP,UAAW,OACX,gBAAiB,OACjB,QAAS,oBACT,YAAa,OACb,kBAAmB,OACnB,SAAU,UAClB,CAAO,EACDT,EAAS,SAAW,aAEpBQ,EAAS,QAAO,EAChBR,EAAS,SAAW,GAEvB,CACH,EAEAU,EAAUT,EAAgBK,CAAO,EAEjC,MAAMK,CAAM,CACV,YAAY,CAAE,OAAAC,EAAQ,IAAAC,EAAK,MAAAC,CAAK,EAAI,CAClC,KAAK,OAASF,EACd,KAAK,IAAMC,EACX,KAAK,MAAQC,EACb,KAAK,KAAI,CACV,CAED,MAAO,CACL,KAAK,SAAW,GAChB,KAAK,WAAa,KAClB,MAAMC,EAAO,KAAK,UAAU,CAAC,EAC7B,KAAK,OAAOA,CAAI,EAChB,KAAK,kBAAkB,KAAK,IAAK,EAAI,EACrC,KAAK,kBAAkB,KAAK,MAAO,EAAK,CACzC,CAED,OAAQ,CACF,KAAK,WAGT,KAAK,SAAW,GAChB,KAAK,kBAAkB,KAAK,IAAK,EAAI,EACrC,KAAK,kBAAkB,KAAK,MAAO,EAAI,EAEvC,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMC,EAAc,KAAK,MACnBC,EAAYlB,EAAmBiB,EAC/BD,EAAO,KAAK,UAAUE,CAAS,EACjCA,EAAY,MACd,KAAK,KAAI,EACT,KAAK,KAAI,GAEX,KAAK,OAAOF,CAAI,CACjB,EAAE,GAAI,EACR,CACD,MAAO,CACL,cAAc,KAAK,UAAU,CAC9B,CAED,UAAUG,EAAI,CAQZ,MAAMC,EAAO,KAAK,IAAI,KAAK,MAAMD,EAAK,KAAG,CAAC,EAEpCE,EAAQ,KAAK,IAAI,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EAE9CG,EAAU,KAAK,IAAI,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,CAAC,EAE3DI,EAAU,KAAK,IACnB,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,CACxD,EAEI,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,IAAIC,EAAO,CACT,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CACD,kBAAkBC,EAASC,EAAM,CAC/BD,EAAQ,SAAWC,EAAO,WAAa,EACxC,CACH,CAEA,MAAMC,EAAQ,IAAIf,EAAM,CACtB,OAAQgB,EACR,IAAK3B,EACL,MAAOC,CACT,CAAC,EAEDD,EAAS,iBAAiB,QAAS0B,EAAM,MAAM,KAAKA,CAAK,CAAC,EAE1D,SAASC,EAAgB,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DpB,EAAkB,YAAc,GAAGiB,CAAI,GACvChB,EAAmB,YAAc,GAAGiB,CAAK,GACzChB,EAAqB,YAAc,GAAGiB,CAAO,GAC7ChB,EAAqB,YAAc,GAAGiB,CAAO,EAC/C"}